# language: yaml
name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
defaults:
  run:
     working-directory: ./registro-horas

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [23]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.java-version }}
          cache: maven

      - name: Cache Maven local repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Grant execute permission for mvnw
        run: chmod +x ./mvnw

      - name: Build (compile + tests)
        run: ./mvnw -B -V clean verify

      - name: Package artifact (skip tests)
        run: ./mvnw -B -DskipTests clean package

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

      # Exemplo: publicar imagem Docker (opcional). Ative definindo DOCKER_PUBLISH=true e configurando secrets.
      - name: Build and push Docker image (optional)
        if: env.DOCKER_PUBLISH == 'true'
        env:
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          docker build -t $DOCKERHUB_USER/registro-horas:${{ github.sha }} .
          echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USER --password-stdin
          docker push $DOCKERHUB_USER/registro-horas:${{ github.sha }}
